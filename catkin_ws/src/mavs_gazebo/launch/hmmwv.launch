<?xml version="1.0"?>
<launch>
  <!-- TODO fix gazebo and RViz views on hmmwv -->

  <!-- TODO use the robot name parametrically in all files, teliop.jl, position.jl -->
  <arg name="name" default="hmmwv"/>
  <arg name="model" default="$(find mavs_gazebo)/urdf/mavs.xacro"/>

  <!-- TODO figure this out.. why do we need this -->
  <arg name="world_frame" default="/world"/>
  <arg name="base_link_frame" default="base_link"/>
  <arg name="lidar_frame" default="velodyne_top_link"/>
  <!-- TODO use the robot name parametrically in all files,obstacle_detector, velodyne.xacro -->

  <!-- send the robot XML to param server -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder '$(arg model)' base_link_frame:=$(arg base_link_frame) world_frame:=$(arg world_frame)" />
  <param name="base_link_frame" type="string" value="$(arg base_link_frame)"/>
  <param name="world_frame" type="string" value="$(arg world_frame)"/>

  <!-- Start gazebo and load the world -->
  <include file="$(find mavs_gazebo)/launch/world.launch"/>

  <!-- Spawn a robot into Gazebo -->
  <node name="spawn_robot" pkg="gazebo_ros" type="spawn_model"
        args="-param robot_description
           -urdf
           -model $(arg name)"
           respawn="false" output="screen"/>
  <!--node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="30.0" />
  </node TODO  look into using this as well as tf-->

  <!-- Load joint controllers -->
  <include file="$(find mavs_control)/launch/mavs_control.launch"/>

  <!-- publish the global position of the robot -->
  <node name="postion" pkg="mavs_control" type="link_positions.jl" output="screen"/>
  <node pkg="mavs_description" type="frame_tf_broadcaster" name="velodyne_top_link_tf_broadcaster" />
  <node pkg="mavs_description" type="position_broadcaster" args="$(arg name)" name="postion_broadcaster" />

  <!-- LiDAR data processing -->
  <include file="$(find mavs_description)/launch/lidar_data.launch"/>
  <!-- TODO update obstacle detector min max based off of senario, currently this is hardcoded in-->
  <!-- TODO consider pushing senario to yaml file, or at least the common params -->
  <include file="$(find obstacle_detector)/launch/mavs.launch"/>

  <!-- teliop TODO make this optional with args-->
  <node name="teliop_keys" pkg="teleop_twist_keyboard" type="teleop_twist_keyboard.py" output="screen"/>
  <node name="teliop" pkg="mavs_control" type="teliop.jl" output="screen"/>

  <!-- Obstacle Avoidance-->
  <node name="obstacle_paramameters" pkg="mavs_control" type="obstacle_parameters.jl" output="screen"/>
  <node name="obstacle_avoidance" pkg="mavs_control" type="obstacle_avoidance.jl" output="screen"/>
  <node name="move_hmmwv" pkg="mavs_control" type="move_hmmwv.jl" output="screen"/>

</launch>
